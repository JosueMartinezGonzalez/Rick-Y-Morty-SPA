(()=>{"use strict";var n={};n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),(()=>{var a;n.g.importScripts&&(a=n.g.location+"");var e=n.g.document;if(!a&&e&&(e.currentScript&&(a=e.currentScript.src),!a)){var s=e.getElementsByTagName("script");s.length&&(a=s[s.length-1].src)}if(!a)throw new Error("Automatic publicPath is not supported in this browser");a=a.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=a})();const a=n.p+"871afc4ab2297a2848cc.png",e=n.p+"35eb712a01f6a8974c73.jpg",s="https://rickandmortyapi.com/api/character/",t=async n=>{const a=n?`${s}${n}`:s;try{const n=await fetch(a);return await n.json()}catch(n){console.error(n)}},i=()=>location.hash.slice().toLocaleLowerCase().split("/")[1]||"/",c=()=>'\n    <div class="Error404">\n        <h2>Error 404</h2>\n    </div>\n    ',r={"/":async()=>`\n        <div class="main-content" id="main-content">\n            ${(await t()).results.map((n=>`\n                <article class="personaje-container" id="personaje-container">\n                    <a href="#/${n.id}">\n                        <div class="img-container">\n                            <img class="personaje-img" src="${n.image}" alt="">\n                        </div>\n                        <div class="personaje-description">\n                            <h2 class="name">${n.name}</h2>\n                        </div>\n                    </a>\n                </article>\n            `)).join("")}\n        </div>\n    `,"/:id":async()=>{const n=i(),a=await t(n);return`\n    <div class="Characters-inner">\n        <article class="Characters-card">\n            <img src="${a.image}" alt="${a.name}">\n            <h2>${a.name}</h2>\n        </article>\n        <article class="Characters-card">\n            <h3>Episodes: <span>${a.episode.length}</span></h3>\n            <h3>Status: <span>${a.status}</span></h3>\n            <h3>Species: <span>${a.species}</span></h3>\n            <h3>Gender: <span>${a.gender}</span></h3>\n            <h3>Origin: <span>${a.origin.name}</span></h3>\n            <h3>Last Location: <span>${a.location.name}</span></h3>\n        </article>\n    </div>\n    `}},o=async()=>{const n=document.getElementById("header"),s=document.getElementById("content"),t=document.getElementById("busqueda");n.innerHTML=await(`\n    <div class="header-content">\n            <div class="contenedor-logo">\n                <img class="logo" src=${a} alt="">\n            </div>\n            <form action="" class="contenedor-buscador" id="form">\n                <div class="contenedor-buscador_icono">\n                    <i class="fas fa-search"></i>\n                </div>\n                <input name="name" class="buscador" id="inputBuscador" type="text" placeholder="Buscar Personaje">\n            </form>\n            <div class="contenedor-user">\n                <div class="contenedor-user_img">\n                    <img class="user" src=${e} alt="">\n                </div>\n                <div class="contenedor-user_icono">\n                    <i class="fas fa-sort-down"></i>\n                </div>\n            </div>\n        </div>\n    `),t.innerHTML=await(async()=>{const n=document.querySelector("#form"),a=document.querySelector("#cerrar"),e=document.querySelector("#busqueda"),s="https://rickandmortyapi.com/api/character/";async function t(n){const a=await fetch(n);return await a.json()}return`\n    <div>\n        ${n.addEventListener("submit",(async i=>{i.preventDefault();const c=await new FormData(n);console.log(`${s}?name=${c.get("name")}`);try{const{results:n}=await t(`${s}?name=${c.get("name")}`);console.log(n),console.log(n),console.log(n.map((n=>`\n                        <article class="personaje-container" id="personaje-container">\n                            <a href="#/${n.id}">\n                                <div class="img-container">\n                                    <img class="personaje-img" src="${n.image}" alt="">\n                                </div>\n                                <div class="personaje-description">\n                                    <h2 class="name">${n.name}</h2>\n                                </div>\n                            </a>\n                        </article>\n                    `)).join()),t(`${s}?name=${c.get("name")}`).map((n=>`\n                        <article class="personaje-container" id="personaje-container">\n                            <a href="#/${n.id}">\n                                <div class="img-container">\n                                    <img class="personaje-img" src="${n.image}" alt="">\n                                </div>\n                                <div class="personaje-description">\n                                    <h2 class="name">${n.name}</h2>\n                                </div>\n                            </a>\n                        </article>\n                    `)).join(),a.classList.remove("none"),e.classList.remove("none")}catch(n){}a.addEventListener("click",(()=>{a.classList.add("none"),e.classList.add("none")}))}))}\n        </div>`})();let o=i(),d=await(n=>n.length<=3?"/"===n?n:"/:id":`/${n}`)(o),l=r[d]?r[d]:c;t.innerHTML=await l(),s.innerHTML=await l()};window.addEventListener("load",o),window.addEventListener("hashchange",o)})();